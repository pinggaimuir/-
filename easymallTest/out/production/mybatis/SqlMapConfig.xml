<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--Mybatis加载属性的顺序-->
    <!--1、在properties元素体内property定义的属性首先加载-->
    <!--2、然后读取resource或者url加载的外部文件，若发现同名属性会覆盖-->
    <!--3、最后读取Mapper中的parameterType中的参数类型的属性，若发现同名属性会覆盖-->
    <properties resource="db.properties"/>

    <!--全局的配置参数-->
    <settings>
        <!-- Globally enables or disables any caches configured in any mapper under this configuration -->
        <setting name="cacheEnabled" value="true"/>
        <!-- Sets the number of seconds the driver will wait for a response from the database -->
        <setting name="defaultStatementTimeout" value="3000"/>
        <!-- Enables automatic mapping from classic database column names A_COLUMN to camel case classic Java property names aColumn -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- Allows JDBC support for generated keys. A compatible driver is required.
        This setting forces generated keys to be used if set to true,
         as some drivers deny compatibility but still work -->
        <setting name="useGeneratedKeys" value="true"/>
        <!--打开懒加载的开关-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--把积极加载改为消极加载-->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <!--类型别名定义-->
    <typeAliases>
        <!--单个的别名定义-->
        <!--<typeAlias type="domain.User" alias="user"/>-->
        <!--批量别名定义，mybatis自动扫描包中的po类，自动定义别名，首字母，大写或者小写都可以（一般情况下首字母小写）-->
        <package name="domain"/>
    </typeAliases>
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <!-- 方言 mysql -->
            <property name="dialect" value="mysql"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样-->
            <property name="offsetAsPageNum" value="true"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="true"/>
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
            <property name="pageSizeZero" value="true"/>
            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
            <!-- 合理化 true时查询到第一页和最后一页不不会返回空，返回第一页和最后一页的信息 -->
            <property name="reasonable" value="true"/>
        </plugin>
    </plugins>
    <!--typeHandlers类型处理器 完成java类型和jdbc类型的转换 一半不需要配置，mybatis默认有很多自动转换类型-->


    <!--与spring整合后environments配置将废除-->
    <environments default="development">
        <environment id="development">
            <!--使用jdbc事物管理，事物控制有mybatis-->
            <transactionManager type="JDBC"/>
            <!--数据库连接池，由mybatis管理-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.user}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!-- Continue going here -->
    <mappers>
        <!--1、resource 一次只能加载一个xml-->
     <!--   <mapper resource="sqlmap/User.xml"/>
        <mapper resource="sqlmap/UserMapper.xml"/>-->

        <!--2、通过mapper接口接在映射
           遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录中
           且要使用mapper接口
         -->
        <!--<mapper class="mappertest9_23.UserMapper"/>-->

        <!--3、批量加载mapper，指定mapper的包名，mytatis自动扫描包下所有mapper进行加载-->
        <package name="mappertest9_23"/>
    </mappers>
</configuration>