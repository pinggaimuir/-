<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatisGenerator.dao.OrgMarketInfoMapper" >
  <resultMap id="BaseResultMap" type="mybatisGenerator.javaBean.OrgMarketInfo" >
    <result column="issue_id" property="issueId" jdbcType="BIGINT" />
    <result column="stock" property="stock" jdbcType="VARCHAR" />
    <result column="liste_market" property="listeMarket" jdbcType="VARCHAR" />
    <result column="capital_struct" property="capitalStruct" jdbcType="VARCHAR" />
    <result column="stock_type" property="stockType" jdbcType="VARCHAR" />
    <result column="market_data" property="marketData" jdbcType="VARCHAR" />
    <result column="institution_rate" property="institutionRate" jdbcType="VARCHAR" />
    <result column="bonus_info" property="bonusInfo" jdbcType="VARCHAR" />
    <result column="uuid" property="uuid" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    issue_id, stock, liste_market, capital_struct, stock_type, market_data, institution_rate, 
    bonus_info, uuid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="mybatisGenerator.javaBean.OrgMarketInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from org_market_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="mybatisGenerator.javaBean.OrgMarketInfoExample" >
    delete from org_market_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatisGenerator.javaBean.OrgMarketInfo" >
    insert into org_market_info (issue_id, stock, liste_market, 
      capital_struct, stock_type, market_data, 
      institution_rate, bonus_info, uuid
      )
    values (#{issueId,jdbcType=BIGINT}, #{stock,jdbcType=VARCHAR}, #{listeMarket,jdbcType=VARCHAR}, 
      #{capitalStruct,jdbcType=VARCHAR}, #{stockType,jdbcType=VARCHAR}, #{marketData,jdbcType=VARCHAR}, 
      #{institutionRate,jdbcType=VARCHAR}, #{bonusInfo,jdbcType=VARCHAR}, #{uuid,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="mybatisGenerator.javaBean.OrgMarketInfo" >
    insert into org_market_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="issueId != null" >
        issue_id,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="listeMarket != null" >
        liste_market,
      </if>
      <if test="capitalStruct != null" >
        capital_struct,
      </if>
      <if test="stockType != null" >
        stock_type,
      </if>
      <if test="marketData != null" >
        market_data,
      </if>
      <if test="institutionRate != null" >
        institution_rate,
      </if>
      <if test="bonusInfo != null" >
        bonus_info,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="issueId != null" >
        #{issueId,jdbcType=BIGINT},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=VARCHAR},
      </if>
      <if test="listeMarket != null" >
        #{listeMarket,jdbcType=VARCHAR},
      </if>
      <if test="capitalStruct != null" >
        #{capitalStruct,jdbcType=VARCHAR},
      </if>
      <if test="stockType != null" >
        #{stockType,jdbcType=VARCHAR},
      </if>
      <if test="marketData != null" >
        #{marketData,jdbcType=VARCHAR},
      </if>
      <if test="institutionRate != null" >
        #{institutionRate,jdbcType=VARCHAR},
      </if>
      <if test="bonusInfo != null" >
        #{bonusInfo,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatisGenerator.javaBean.OrgMarketInfoExample" resultType="java.lang.Integer" >
    select count(*) from org_market_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update org_market_info
    <set >
      <if test="record.issueId != null" >
        issue_id = #{record.issueId,jdbcType=BIGINT},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=VARCHAR},
      </if>
      <if test="record.listeMarket != null" >
        liste_market = #{record.listeMarket,jdbcType=VARCHAR},
      </if>
      <if test="record.capitalStruct != null" >
        capital_struct = #{record.capitalStruct,jdbcType=VARCHAR},
      </if>
      <if test="record.stockType != null" >
        stock_type = #{record.stockType,jdbcType=VARCHAR},
      </if>
      <if test="record.marketData != null" >
        market_data = #{record.marketData,jdbcType=VARCHAR},
      </if>
      <if test="record.institutionRate != null" >
        institution_rate = #{record.institutionRate,jdbcType=VARCHAR},
      </if>
      <if test="record.bonusInfo != null" >
        bonus_info = #{record.bonusInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update org_market_info
    set issue_id = #{record.issueId,jdbcType=BIGINT},
      stock = #{record.stock,jdbcType=VARCHAR},
      liste_market = #{record.listeMarket,jdbcType=VARCHAR},
      capital_struct = #{record.capitalStruct,jdbcType=VARCHAR},
      stock_type = #{record.stockType,jdbcType=VARCHAR},
      market_data = #{record.marketData,jdbcType=VARCHAR},
      institution_rate = #{record.institutionRate,jdbcType=VARCHAR},
      bonus_info = #{record.bonusInfo,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>