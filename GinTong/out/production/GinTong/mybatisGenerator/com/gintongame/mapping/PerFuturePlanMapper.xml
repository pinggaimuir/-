<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatisGenerator.dao.PerFuturePlanMapper" >
  <resultMap id="BaseResultMap" type="mybatisGenerator.javaBean.PerFuturePlan" >
    <result column="career" property="career" jdbcType="VARCHAR" />
    <result column="live" property="live" jdbcType="VARCHAR" />
    <result column="study" property="study" jdbcType="VARCHAR" />
    <result column="other" property="other" jdbcType="VARCHAR" />
    <result column="uuid" property="uuid" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    career, live, study, other, uuid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="mybatisGenerator.javaBean.PerFuturePlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from per_future_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="mybatisGenerator.javaBean.PerFuturePlanExample" >
    delete from per_future_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatisGenerator.javaBean.PerFuturePlan" >
    insert into per_future_plan (career, live, study, 
      other, uuid)
    values (#{career,jdbcType=VARCHAR}, #{live,jdbcType=VARCHAR}, #{study,jdbcType=VARCHAR}, 
      #{other,jdbcType=VARCHAR}, #{uuid,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="mybatisGenerator.javaBean.PerFuturePlan" >
    insert into per_future_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="career != null" >
        career,
      </if>
      <if test="live != null" >
        live,
      </if>
      <if test="study != null" >
        study,
      </if>
      <if test="other != null" >
        other,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="career != null" >
        #{career,jdbcType=VARCHAR},
      </if>
      <if test="live != null" >
        #{live,jdbcType=VARCHAR},
      </if>
      <if test="study != null" >
        #{study,jdbcType=VARCHAR},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatisGenerator.javaBean.PerFuturePlanExample" resultType="java.lang.Integer" >
    select count(*) from per_future_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update per_future_plan
    <set >
      <if test="record.career != null" >
        career = #{record.career,jdbcType=VARCHAR},
      </if>
      <if test="record.live != null" >
        live = #{record.live,jdbcType=VARCHAR},
      </if>
      <if test="record.study != null" >
        study = #{record.study,jdbcType=VARCHAR},
      </if>
      <if test="record.other != null" >
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update per_future_plan
    set career = #{record.career,jdbcType=VARCHAR},
      live = #{record.live,jdbcType=VARCHAR},
      study = #{record.study,jdbcType=VARCHAR},
      other = #{record.other,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>