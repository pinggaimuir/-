<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatisGenerator.dao.PerFamilyInfoMapper" >
  <resultMap id="BaseResultMap" type="mybatisGenerator.javaBean.PerFamilyInfo" >
    <result column="parents" property="parents" jdbcType="VARCHAR" />
    <result column="children" property="children" jdbcType="VARCHAR" />
    <result column="spouse" property="spouse" jdbcType="VARCHAR" />
    <result column="home_addr" property="homeAddr" jdbcType="VARCHAR" />
    <result column="uuid" property="uuid" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    parents, children, spouse, home_addr, uuid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="mybatisGenerator.javaBean.PerFamilyInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from per_family_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="mybatisGenerator.javaBean.PerFamilyInfoExample" >
    delete from per_family_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatisGenerator.javaBean.PerFamilyInfo" >
    insert into per_family_info (parents, children, spouse, 
      home_addr, uuid)
    values (#{parents,jdbcType=VARCHAR}, #{children,jdbcType=VARCHAR}, #{spouse,jdbcType=VARCHAR}, 
      #{homeAddr,jdbcType=VARCHAR}, #{uuid,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="mybatisGenerator.javaBean.PerFamilyInfo" >
    insert into per_family_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="parents != null" >
        parents,
      </if>
      <if test="children != null" >
        children,
      </if>
      <if test="spouse != null" >
        spouse,
      </if>
      <if test="homeAddr != null" >
        home_addr,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="parents != null" >
        #{parents,jdbcType=VARCHAR},
      </if>
      <if test="children != null" >
        #{children,jdbcType=VARCHAR},
      </if>
      <if test="spouse != null" >
        #{spouse,jdbcType=VARCHAR},
      </if>
      <if test="homeAddr != null" >
        #{homeAddr,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatisGenerator.javaBean.PerFamilyInfoExample" resultType="java.lang.Integer" >
    select count(*) from per_family_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update per_family_info
    <set >
      <if test="record.parents != null" >
        parents = #{record.parents,jdbcType=VARCHAR},
      </if>
      <if test="record.children != null" >
        children = #{record.children,jdbcType=VARCHAR},
      </if>
      <if test="record.spouse != null" >
        spouse = #{record.spouse,jdbcType=VARCHAR},
      </if>
      <if test="record.homeAddr != null" >
        home_addr = #{record.homeAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update per_family_info
    set parents = #{record.parents,jdbcType=VARCHAR},
      children = #{record.children,jdbcType=VARCHAR},
      spouse = #{record.spouse,jdbcType=VARCHAR},
      home_addr = #{record.homeAddr,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>