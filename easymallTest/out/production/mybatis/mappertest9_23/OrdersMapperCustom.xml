<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappertest9_23.OrdersMapperCustom">
    <cache/>

    <!--一对一查询 如没有特殊需求，resultType比较简单
        一对多或者需要延迟加载，用resultMap
                1、可以映射到一个list中
                2、可以映射到一个pojo中
        -->

    <!--订单和用户信息查询结果的resultMap-->
    <resultMap type="Orders" id="OrdersUserResultMap">
        <!--映射订单信息，id为订单信息的唯一标识，如果有多个列组成唯一标识，配置多个id-->
        <id column="id" property="id"/>
        <result column="user_id" property="user_id"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
        <!--配置用户的关联信息-->
        <association property="user" javaType="User2">
            <!--这里的id用来唯一标识用户id信息-->
            <id column="user_id" property="id"/>
            <result property="address" column="address"/>
            <result property="birthday" column="birthday"/>
            <result property="sex" column="sex"/>
            <result property="username" column="username"/>
        </association>
    </resultMap>

    <!--订单加用户信息和订单明细结合的resultrMap-->
    <!--使用extends继承，相当与配置了上面的所有信息-->
    <resultMap type="Orders" id="findOrdersAndOrderDetailResultMap" extends="OrdersUserResultMap">
        <!--
            一个订单关联查询出了多条明细，要使用collection进行映射
            collection：关联查询到的多条记录映射到集合对象的当中
            property ：关联查询查询到的多条记录映射到Orders中的哪个属性
            ofType：指定、映射到property的list中的pojo类型
            如果不指定<id column='od_id'>则无法区分查询结果，查询结果的list中只有一条记录
        -->
      <!--  <collection property="orderDetails" ofType="Orderdetail">
            <id column="od_id" property="id"/>
            <result column="items_id" property="items_id"/>
            <result column="items_num" property="items_num"/>
            <result column="orders_id" property="orders_id"/>
        </collection>-->
    </resultMap>
    <!--订单查询 联合用户，订单明细，商品items-->
    <resultMap type="User2" id="UserAndItemsResultMap">
        <id column="user_id" property="id"/>
        <result column="username" property="username"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <collection property="ordersList"  ofType="domain.Orders">
            <id column="id" property="id"/>
            <result column="number" property="number"/>
            <result column="note" property="note"/>
            <result column="createtime" property="createtime"/>
            <result column="user_id" property="user_id"/>
       <!--     <collection property="orderDetails" ofType="domain.Orderdetail">
                <id column="od_id" property="id"/>
                <result column="items_num" property="items_num"/>
                <result column="orders_id" property="orders_id"/>
                <result column="items_id" property="items_id"/>
                <association property="items" javaType="Items">
                    <id column="items_id" property="id"/>

                </association>
            </collection>-->
        </collection>
    </resultMap>
    <!--查询用户信息使用resultType-->
    <select id="findUserOrder" resultType="orderCustom">
      select orders.*,USER.sex,user.address,user.username from orders,user where orders.user_id=user.id;
    </select>
    <!--查询用户信息使用resultMap-->
    <select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
      select orders.*,USER.sex,user.address,user.username from orders,user where orders.user_id=user.id;
    </select>
    <!--查询点单关联的用户信息和订单明细-->
    <select id="findOrdersAndOrderDetailResultMap" resultMap="findOrdersAndOrderDetailResultMap">
      select orders.*,USER.sex,user.address,user.username,orderdetail.items_id,orderdetail.items_num,
      orderdetail.orders_id,orderdetail.id od_id
      from orders,user,orderdetail,items
      where orders.user_id=user.id and orders.id=orderdetail.orders_id;
    </select>
    <!--查询订单关联的 用户信息  订单信息  商品信息-->
    <select id="findUsersEtc" resultMap="UserAndItemsResultMap">
      select orders.*,USER.sex,user.address,user.username,orderdetail.items_id,orderdetail.items_num,
      orderdetail.orders_id,orderdetail.id od_id,items.name items_name,items.detail items_detail,items.price items_price
      from orders,user,orderdetail,items
      where orders.user_id=user.id and orders.id=orderdetail.orders_id and items.id=orderdetail.items_id;
    </select>


    <!--延迟加载-->
    <resultMap type="domain.Orders" id="OrdersUserLazyLoadingResultMap">
        <id column="id" property="id"/>
        <result column="user_id" property="user_id"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
        <!--实现用户的延迟加载
            select 实现关联查询的statement(延迟加载执行的sql)
               column 订单信息关联用户的列
         -->
        <association property="user" javaType="User2" select="mappertest9_23.UserMapper.findUserById" column="user_id">

        </association>
    </resultMap>
    <select id="findOrdersUserLazyLoading" resultMap="findOrdersAndOrderDetailResultMap">
        SELECT * FROM orders
    </select>

</mapper>
